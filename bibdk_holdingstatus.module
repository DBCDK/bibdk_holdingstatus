<?php

module_load_include('inc', 'bibdk_holdingstatus', 'bibdk_holdingstatus.favorite');
/**
 * Implements hook_menu();
 */
function bibdk_holdingstatus_menu() {
  $items['overlay/holdings/%'] = array(
    'title' => t('Localisations', array(), array('context' => 'bibdk_holdingstatus')),
    'page callback' => 'bibdk_holdingstatus_get_localisation',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['holdings/status'] = array(
    'page callback' => 'bibdk_holdingstatus_get_status',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}

/**
 * Ajax Callback function. Gets holding status for a material at a library
 */
function bibdk_holdingstatus_get_status(){
  $lid = $_REQUEST['lid'];
  $pid = $_REQUEST['pid'];

  $holding = bibdk_holdingstatus_get_holdings($lid, $pid);
  $display = bibdk_holdingstatus_status_display($holding[$lid][$pid]);

  $return = array(
    'pid' => $pid,
    'lid' => $lid,
    'data' => drupal_render($display),
  );
  drupal_json_output($return);
}

function bibdk_holdingstatus_get_localisation($pids) {
  global $user;
  $agency_id = FALSE;
  $num_per_page = 10;

  // TO DO: Do this call as a hook? or method in ding_provider?
  $favourites = _bibdk_favourite_get_from_webservice();
  if ( !empty($favourites) ) {
    foreach ($favourites as $bibnr => $favourite) {
      if ( $favourite->orderAgency == TRUE) {
        $agency_id = $bibnr;
      }
    }
  }

  $ids = explode(',', $pids);


  if ( $agency_id ) {
    $result = open_holdingstatus_localisationRequest($ids, $agency_id);
  }
  else {
    $result = open_holdingstatus_localisationRequest($ids);
  }

  $agencies = array();
  $error_messages = array();

  $count_localisations = ( isset($result['agencies']) ) ? count($result['agencies']) : 0;

  if ( !$count_localisations && isset( $result['error_message']) ) {
    $error_messages = array_unique($result['error_message']);
  }

  $page = pager_default_initialize($count_localisations, $num_per_page);

  $offset = $num_per_page * $page;

  if ( $count_localisations ) {
    $agencies = array_slice($result['agencies'], $offset, $num_per_page, $preserve_keys=TRUE);
  }

  //$holdings = bibdk_holdingstatus_get_holdings($agencies, $ids);
  $render_agencies = array();
  foreach ($agencies as $agencyId => $localization) {
    $agency = new TingAgency($agencyId);
    $information = $agency->getInformation();
    if (!isset($information))
      $error_messages[] = t('library_not_found');
    else {
      //$holding = isset($holdings[$agencyId]) ? $holdings[$agencyId] : null;
      $element = bibdk_holdingstatus_handle_response($information, $localization);
      $render_agencies[$agencyId] = drupal_render($element);
    }
  }
  $output['errors'] = ( $error_messages ) ? array(
    '#items' => $error_messages,
    '#theme' => 'item_list',
    '#attributes' => array(
      'class' => array('error-messages'),
    ),
  ) : NULL;

  $output['count_localisations'] = ( $count_localisations ) ? array(
    '#type' => 'markup',
    '#markup' => '<p class="count-localisations">' . t("There are %n localisations", array('%n' => $count_localisations), array('context' => 'bibdk_holdingstatus')) . '</p>',
  ) : NULL;

  $output['note_localisations'] = ( $count_localisations ) ? array(
    '#type' => 'markup',
    '#markup' => '<p class="note-localisations">' . t("NB! Send your reservation to the library, where you want to pick up the material.", array(), array('context' => 'bibdk_holdingstatus')) . '</p>',
  ) : NULL;

  $output['list_localisations'] = array(
    '#items' => $render_agencies,
    '#theme' => 'item_list',
    '#attributes' => array(
      'class' => array('list-agencies'),
    ),
  );

  $output['pager_localisations'] = array(
    '#type' => 'markup',
    '#markup' => theme('pager'),
    '#attributes' => array(
      'class' => array('pager-agencies'),
    ),
  );

  return $output;

}

/**
 * Get holdingStatus for all agencies and all pids. Returns a render_array
 * @param $agencies
 * @param $pids
 * @return array
 */
function bibdk_holdingstatus_get_holdings($agencyIds, $pids){
  $agencyIds = !is_array($agencyIds) ? array($agencyIds) : $agencyIds;
  $pids = !is_array($pids) ? array($pids) : $pids;
  $items = array();
  foreach($pids as $pid){
      $results = open_holdingstatus_holdingsRequest($agencyIds,$pid);
    if (!isset($results))
      continue; // somekind of error should be logged
    foreach($results as $result){
      $holding = new BibdkHoldings($result);
      $items[$holding->getResponderId()][$pid] = $result;
    }
  }
  return $items;
}


/**
 * Implement hook_ting_openformat_subwork_materialtype_actions
 * @param $ordered_subworks
 * @param $type_id
 * @param $subtype_id
 * @return array
 */
function bibdk_holdingstatus_ting_openformat_subwork_materialtype_actions($ordered_subworks, $type_id, $subtype_id, $subWork) {
  /*if (!isset($ordered_subworks[$type_id][$subtype_id]['manifest']['fields']['bibdk_sub_reservation_button']))
    return;*/
  $lookup_pids = $subWork->getHostPublicationID();
  $render = array(
    'localisations_link' => array(
      '#type' => 'link',
      '#title' => '<span class="icon icon-left icon-lightgrey-list">&nbsp;</span>' . t("See localisations for this material", array(), array('context' => 'ting_holdingstatus')),
      '#href' => "overlay/holdings/" . implode(',',$lookup_pids),
      '#options' => array(
        'html' => TRUE,
      ),
      '#attributes' => array(
        'class' => array('bibdk-popup-link', 'text-small', 'text-lightgrey','clearfix'),
        'rel' => 'holdings',
      ),
      '#weight'=>-1,
    ),
  );
  return $render;
}


/**
 * Handling the response
 * @param TingClientAgencyInformation information
 * @return array
 */
function bibdk_holdingstatus_handle_response($information, $agency, $holdingstatus_results = null) {
  if ( isset($information) ){

    foreach ($agency['holdings'] as $pid => $holding) {
      $holdings[$pid]['status'] = array(
        '#type' => 'fieldset',
        '#attributes' => array(
          'data-pid' => $pid,
          'data-lid' => $information->getBranchId(),
          'class' => array('holding-status-load'),
        ),
        '#attached' => array(
          'js' => array(drupal_get_path('module', 'bibdk_holdingstatus') . '/js/bibdk_holdingstatus.js'),
        ),
      );
      $holdings[$pid]['lookupUrl'] = _bibdk_holdingstatus_create_lookupUrl($information->getLookupUrl(), $holding['localIdentifier'], $holding['note']);
    }
    $elements = array(
      '#theme' => 'localisation_agencies',
      '#branchId' => $information->getBranchId(),
      '#agencyName' => $information->getAgencyName(),
      '#postalAddress' => $information->getPostalAddress(),
      '#postalCode' => $information->getPostalCode(),
      '#city' => $information->getCity(),
      '#lookupUrl' => $holdings,
    );
    return $elements;
  }
}

function bibdk_holdingstatus_status_display($holdingstatus_result){
  $holding = new BibdkHoldings($holdingstatus_result);
  return array(
    '#type' => 'holding_status',
    '#content' => $holding->message(),
    '#status' => $holding->status(),
    '#theme' => 'holding_status',
  );
}

function bibdk_holdingstatus_theme() {
  return array(
    'localisation_agencies' => array(
      'template' => 'theme/localisation-agencies',
      'render element' => 'element',
      'variables' => array(
        'branchId' => '',
        'agencyName' => '',
        'branchName' => '',
        'postalAddress' => '',
        'postalCode' => '',
        'city' => '',
        'lookupUrl' => '',
        'note' => '',
        'error' => '',
      ),
    ),
    'holding_status' => array(
      'template' => 'theme/holding-status',
      'variables' => array('content' => '', 'status' => ''),
    ),
  'favourite_holdings' => array(
      'template' => 'theme/favourite-holdings',
      'variables' => array('library_name' => '', 'pid' => '', 'lid' => '', 'link' => ''),
    ),
  'bibdk_holdings_manifestation_field' => array(
      'template' => 'theme/bibdk-holdings-manifestation-field',
      'variables' => array('path' => '', 'link_text' => '', 'favourites' => array()),
    ),
  );
}


/**
 * Helper function: Create render array for lookupUrl
 * @return array
 */
function _bibdk_holdingstatus_create_lookupUrl($lookupUrl, $localIdentifier, $note) {
  if ( !$lookupUrl ) {
    return array();
  }
  return array(
    '#prefix' => '<p class="lookupUrl">',
    '#suffix' => '</p>',
    'lookup_url' => array(
      '#type' => 'markup',
      'link' => array(
        '#type' => 'link',
        '#title' => t("Look up the material in the library catalog.", array(), array('context' => 'bibdk_holdingstatus')),
        '#href' => ( strpos($lookupUrl, '_IDNR_') !== false ) ? str_replace('_IDNR_', $localIdentifier, $lookupUrl) : $lookupUrl . $localIdentifier ,
        '#options' => array(
          'html' => TRUE,
        ),
        '#attributes' => array(
          'class'  => array('bibdk-popup-link', 'lookup-url'),
          'rel'  => array('lookupUrl'),
        ),
      ),
      'note' => ( $note ) ? array(
        '#prefix' => '<span>(',
        '#type' => 'markup',
        '#markup' => t($note, array(), array('context' => 'bibdk_holdingstatus')),
        '#suffix' => ')</span>',
      ) : NULL,
    ),
  );
}

