<?php

class BibdkHoldingstatusBibdkHoldingsWebTestCase extends DrupalWebTestCase {

  protected $requestResult;

  /**
   * @var BibdkHoldings
   */
  protected $holding;

  public static function getInfo() {
    return array(
      'name' => t('Test bibdk_holdingstatus module'),
      'description' => t('Test the essential methods'),
      'group' => t('Bibliotek.dk - Holdingstatus'),
    );
  }

  public function setUp() {

    parent::setUp(array('bibdk_holdingstatus_webservice_mockup', 'bibdk_holdingstatus', 'bibdk_provider', 'bibdk_webservice'));

    variable_set('open_holdingstatus_url', $this->getAbsoluteUrl('/bibdk_holdingstatus_webservice/'));
    variable_set('agency_search_url', $this->getAbsoluteUrl('/bibdk_holdingstatus_webservice/'));
    variable_set('agency_search_xsd_url',$this->getAbsoluteUrl('/openagency_webservice/xsd'));


    variable_set('bibdk_provider_webservice_url', $this->getAbsoluteUrl('bibdk_webservice'));
    variable_set('bibdk_provider_security_code', 'securityCode');


  }

  public function testRunner() {
    $this->_testInterface();
  }

  private function _testInterface() {
    $this->drupalGet('overlay/holdings/870970-basis:28542941,870970-basis:28794932');

    //Check if localisations are shown
    $this->assertText('There are 45 localisations');
    $this->assertText('KÃ¸benhavns Biblioteker');

    // Check if holdingstatus is shown
    $this->assertRaw('<li class="first"><div id="710100" class="localisation-agency">');
    $this->loginAsProviderUser();
    $this->drupalGet('overlay/holdings/870970-basis:28542941,870970-basis:28794932');

    //First location should be favourit library - user is logged in
    $this->assertRaw('<li class="first"><div id="710100" class="localisation-agency">');

    // Test get holding status via ajax
    $this->drupalGetAJAX('holdings/status', array('query' => array('pid' => '870970-basis:28542941', 'lid' => '710100')));
    $this->assertRaw('bibdk_holding_material_is_home');
  }

  private function loginAsProviderUser() {
    $this->_createProviderUser();
    $edit['name'] = 'good_user';
    $edit['pass'] = 'pass';
    $this->drupalPost('user/login', $edit, t('Log in'), array(), array(), 'user-login', NULL);
  }

  private function _createProviderUser() {
    $name = 'good_user';
    $pass = 'pass';
    bibdk_provider_user_create_account($name, $pass);
    db_insert('authmap')->fields(array(
      'uid' => 2,
      'module' => 'ding_user',
      'authname' => $name
    ))->execute();

    $user = new stdClass();
    $user->uid = 2;
    $user->name = $name;
    $user->roles = array();
    ding_user_save_creds(array(
      'creds' => array(
        'name' => $name,
        'pass' => $pass,
      )
    ), $user);

    return $user;
  }



}

